#!/usr/bin/env bash
# Configure HAproxy so that it send traffic to web-01 and web-02

# 1st  update apt repos
sudo apt update
# 2nd install software-commons
sudo apt-get install --no-install-recommends software-properties-common -y
# 3rd add the haproxy repository to the server's repo base
sudo add-apt-repository ppa:vbernat/haproxy-2.6 -y
# 4th install haproxy
sudo apt-get install haproxy=2.6.\* -y

# ============ Configuring HAProxy ===========
HAPROXY_INIT='/etc/default/haproxy'
HAPROXY_CONFIG='/etc/haproxy/haproxy.cfg'
DOMAIN_NAME='imitor.tech'
HAPROXY_CFG_TEMPLATE="
#--$DOMAIN_NAME-configuration-begins--

frontend "$DOMAIN_NAME"-frontend
	bind 0.0.0.0:80
	default_backend "$DOMAIN_NAME"-backend

backend "$DOMAIN_NAME"-backend
	balance roundrobin
	server 74003-web-01 54.89.25.106
	server 74003-web-02 52.3.241.66

#--$DOMAIN_NAME-configuration-ends--
"

# check if the files exist & create backups, else create them
[ -f "$HAPROXY_INIT" ] && cp "$HAPROXY_INIT" "$HAPROXY_INIT".bak || touch "$HAPROXY_INIT"
[ -f "$HAPROXY_CONFIG" ] && cp "$HAPROXY_CONFIG" "$HAPROXY_CONFIG".bak || touch "$HAPROXY_CONFIG"

# Initialise a checker to know if our configurations exist
# simply put, the code counts the number of times our backend is configured
CHECKER=$(grep -Eco "$DOMAIN_NAME-backend" <$HAPROXY_CONFIG)

# if a line containing "ENABLED=0/1" exists in init file and
if [ "$(grep -Eco '*ENABLED=[01]$' <$HAPROXY_INIT)" -gt 0 ]; then
	# replace all *ENABLED=.
	sed -i 's/#*ENABLED=.$/ENABLED=1/g' "$HAPROXY_INIT"
else
	echo 'ENABLED=1' >>$HAPROXY_INIT
fi

if [ "$CHECKER" -eq 0 ]; then
	echo -en "$HAPROXY_CFG_TEMPLATE" >>$HAPROXY_CONFIG
else
	# clear all occurences and reinitialize
	# initialize start and end tokens using previously added comments
	start_tkn="#--$DOMAIN_NAME-configuration-begins--"
	end_tkn="#--$DOMAIN_NAME-configuration-ends--"
	# get the line number where it starts and ends
	a=$(grep -onE "$start_tkn" <"$HAPROXY_CONFIG" | cut -d : -f1)
	b=$(grep -onE "$end_tkn" <"$HAPROXY_CONFIG" | cut -d : -f1)
	# create a boundary
	start_line=$((a - 1))
	end_line=$((b + 1))
	# Delete the lines inbetween the boundary
	sed -i "$start_line,$end_line"d "$HAPROXY_CONFIG"
	# append the config again
	echo -en "$HAPROXY_CFG_TEMPLATE" >>$HAPROXY_CONFIG
fi

sudo service haproxy restart

# # if configuration fails, revert
# VAL=$(echo $?)
# echo $VAL

# if [ "$VAL" -eq 1 ]; then
# 	printf "Reverting . . .\n"
# 	cp "$HAPROXY_INIT".bak "$HAPROXY_INIT"
# 	cp "$HAPROXY_CONFIG".bak "$HAPROXY_CONFIG"
# 	print "Done\n"
# else
# 	printf "Configuration Successful\n"
# fi
